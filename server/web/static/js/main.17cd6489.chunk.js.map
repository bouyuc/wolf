{"version":3,"sources":["logo.svg","Footer.js","PlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","SET_DIE_STATUS","gql","SET_CHIEF_ID","PlayerTable","props","classes","useMutation","setDie","setChiefId","TableContainer","component","Paper","Table","className","aria-label","size","TableHead","TableRow","TableCell","align","TableBody","data","map","row","key","id","Checkbox","onChange","e","variables","checked","chiefId","color","inputProps","isDie","scope","name","roleName","votedNumber","style","isEmpty","isVoteFinish","transition","fontSize","BaseTable","console","log","total","result","forEach","d","number","push","processData","Fragment","players","v","idx","marginLeft","RoleTable","GET_ROLES","AddRole","React","useState","roleId","setRoleId","roleNumber","setRoleNumber","useQuery","loading","error","display","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","width","event","newValue","renderInput","params","TextField","label","variant","type","value","target","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","onCompleted","res","idData","template","refetch","updateRolePriority","dragData","DndProvider","backend","Backend","IconButton","onClick","ids","toString","EditRole","useEffect","Typography","gutterBottom","EditRuleCore","setValue","updateRule","description","multiline","rows","fullWidth","EditRule","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","GET_TEMPLATES","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","onSelect","isEnabled","onEdit","onDelete","disabled","TemplateTable","addTemplate","deleteTemplate","setName","isBusy","stopPolling","startPolling","called","enableTemplate","enableResult","maxWidth","templates","setEditName","Admin","editName","Button","GET_ENABLED_TEMPLATE","EnabledTemplate","fetchPolicy","enabledTemplate","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","VOTE_START","parseData","playerGroup","r","TemplateRoleTable","VoteAction","targetList","setTargetList","onClose","voteStart","DialogContent","DialogContentText","hasChief","player","Radio","includes","length","DialogActions","targets","Game","generateRole","generatePlayer","removeAllPlayer","isOpen","setIsOpen","useDebounce","updatePlayerName","isPlayerMode","Dialog","open","DialogTitle","God","history","useHistory","useLazyQuery","getRole","isMounted","interval","setInterval","clearInterval","graphQLErrors","extensions","code","pass","elevation","gameInfo","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","SUBMIT_VOTE","chiefVote","vote","Audio","setTarget","submitVote","isValidCandidate","PlayerControl","playerInfo","playerCalled","root","CardContent","Player","GET_PLAYERS","UPDATE_PLAYER_PASS","Copyright","Date","getFullYear","Login","playerId","setPlayerId","playerPass","setPlayerPass","updatePlayerPass","isValid","CssBaseline","round","src","renderOption","mt","client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","auth","LOG_OFF","LogoffButton","logoff","getPlayer","login","AppBar","position","Toolbar","edge","pt","App","exact","path","ApolloProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.17cd6489.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 550,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DIE_STATUS = gql`\n   mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`\nconst SET_CHIEF_ID = gql`\nmutation SetChiefId($id: Int!) {\n  setChiefId(id: $id)\n}\n`\n\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n  const [setDie] = useMutation(SET_DIE_STATUS);\n  const [setChiefId] = useMutation(SET_CHIEF_ID);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>警長</TableCell>\n            <TableCell>死亡</TableCell>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"left\">玩家</TableCell>\n            <TableCell align=\"right\">角色</TableCell>\n            <TableCell align=\"right\">投票</TableCell>\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n               <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    setChiefId({variables:{id:row.id}});\n                  }}\n                  checked={row.id === props.chiefId}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />\n              </TableCell>\n              <TableCell>\n                {row.id ? <Checkbox\n                  onChange={(e) => {\n                    setDie({variables:{id:row.id}});\n                  }}\n                  checked={row.isDie}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />: null}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.roleName}</TableCell>\n              <TableCell align=\"right\">{row.votedNumber}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : row.isVoteFinish? \"lightgreen\":\"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, {useEffect} from \"react\";\nimport { useQuery, useMutation , useLazyQuery} from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n  console.log(props.data)\n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n\n  return <BaseTable data={props.data} />;\n\n  /*\n  const { variables, query, pollInterval } = props;\n\n  \n  const [queryData,{ loading, error, data: rawData, called}] = useLazyQuery(query, {\n    //fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  let isMounted = true;\n useEffect(() => {\n   if (isMounted) {\n     queryData();\n   }\n\n   const interval = setInterval(() => {\n     if (isMounted) {\n       queryData();\n     }\n   }, 500);\n\n   return () => {\n     clearInterval(interval);\n     isMounted = false;\n   };\n }, []);\n\n  if (!called || !rawData) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n  */\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\n\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    //fetchPolicy: \"network-only\",\n    variables: { name },\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    },\n  });\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  \n\n  if (loading || res.loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data, orgPriorityList, priorityList);\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name , data} = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    \n    console.log('mount' + name);\n\n    return ()=>{\n      console.log('umount' + name)\n    }\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n        <RoleTable data={data}/>\n\n      {/*<RoleTable\n        data={data}\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n      />*/}\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name, data } = props;\n    \n  const [value, setValue] = React.useState(0);\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  console.log(name, data)\n  return (\n   \n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n        \n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} data={data}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n        \n      </TabPanel>\n     \n    </Paper>\n    \n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      //pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n\n      /*\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n      */\n    },\n  });\n\n  React.useEffect(() => {\n    //startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin(props) {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n  console.log()\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} data={props.data}/>\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   \n    const { name, description ,roles} = data.enabledTemplate;\n\n    console.log(data.enabledTemplate)\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description || \"\"}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React, { useEffect } from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nconst GET_ROLES = gql`\n  {\n\n\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n      isDie\n      isVoteFinish\n      votedNumber\n    }\n    gameInfo(id: 0) {\n      isVoteFinish\n      chiefId\n    }\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      id\n      name\n      roleName\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole {\n    generateTemplateRole\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst DARK_START = gql`\n  mutation DarkStart {\n    darkStart\n  }\n`;\n\nconst VOTE_START = gql`\n  mutation DarkStart($targets: [Int]) {\n    voteStart(targets: $targets)\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst parseData = (data) => {\n  const playerGroup = {};\n\n  data.players.forEach((p) => {\n    const { roleName, name, id } = p;\n    if (playerGroup[roleName]) {\n      playerGroup[roleName].push({ name: name || \"\", id });\n    } else {\n      playerGroup[roleName] = [{ name: name || \"\", id }];\n    }\n  });\n\n  console.log(playerGroup);\n\n  const result = [];\n\n  data.enabledTemplate.roles.forEach((r) => {\n    const { name } = r;\n    result.push({ ...r, players: playerGroup[name] });\n  });\n\n  console.log(result);\n\n  return result;\n};\n\nfunction TemplateRoleTable(props) {\n  return <RoleTable data={props.data}/>\n\n\n  /*\n  return (\n    <RoleTable\n\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n  */\n}\n\nfunction VoteAction(props) {\n  const [targetList, setTargetList] = React.useState([]);\n  const [voteStart] = useMutation(VOTE_START, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n  //const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          {`${\n            props.hasChief ? `請選擇放逐的目標` : `請選擇警長候選人`\n          }, 目標必須多於一人, 投票人數也必須多於一人`}\n        </DialogContentText>\n        {props.players\n          .filter((p) => !p.isDie && p.id !== 0)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={targetList.includes(player.id)}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  if (\n                    !targetList.includes(player.id) &&\n                    targetList.length + 1 !==\n                      props.players.filter((p) => !p.isDie && p.id !== 0).length\n                  ) {\n                    setTargetList([...targetList, player.id]);\n                  }\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={targetList.length === 0}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTargetList([]);\n          }}\n        />\n        {`所有人`}\n      </DialogContent>\n      <DialogActions>\n        {(targetList.length === 0 || targetList.length > 1) && (\n          <Button\n            onClick={() => {\n              voteStart({ variables: { targets: targetList } });\n              //submitVote({variables:{id:props.id, target}})\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n        )}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction Game(props) {\n  const classes = useStyles();\n\n  //const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [voteStart] = useMutation(VOTE_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  const hasChief = props.chiefId !== -1;\n\n  if (props.isPlayerMode) {\n    return (\n      <>\n        <Dialog\n          aria-labelledby=\"simple-dialog-title\"\n          open={isOpen}\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {hasChief ? `放逐開始` : `競選警長`}\n          </DialogTitle>\n          <VoteAction\n            players={props.players}\n            onClose={() => {\n              setIsOpen(false);\n            }}\n            hasChief={hasChief}\n          />\n        </Dialog>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole();\n            }}\n          >\n            產生角色\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            刪除玩家\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              //voteStart();\n              setIsOpen(true);\n            }}\n          >\n            {hasChief ? `放逐` : `警長`}\n          </Button>\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable data={props.players} chiefId={props.chiefId} />\n      </>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>\n      </Box>\n      <EnabedTemplateInfo />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const history = useHistory();\n  const [value, setValue] = React.useState(0);\n  const [\n    getRole,\n    { loading, data, stopPolling, startPolling, error, called },\n  ] = useLazyQuery(GET_ROLES, { fetchPolicy: \"network-only\" });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  /*\n  React.useEffect(() => {\n    startPolling(500);\n    return () => {\n      console.log(\"umount god\");\n      stopPolling();\n    };\n  }, []);\n  */\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getRole();\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        getRole();\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error && !loading) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          console.log(\"no access!!!\");\n          history.push(\"/\");\n        }\n      });\n    }\n  }, [error, loading]);\n\n  if (!called || !data) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"遊戲\" />\n        <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n        {isPlayerMode && <Tab label=\"模式\" />}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Game\n          isPlayerMode={isPlayerMode}\n          id={id}\n          pass={pass}\n          name={name}\n          players={data.players}\n          chiefId={data.gameInfo.chiefId}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {isPlayerMode ? <TemplateRoleTable data={parseData(data)}/> : <Admin data={parseData(data)}/>}\n      </TabPanel>\n      {isPlayerMode && (\n        <TabPanel value={value} index={2}>\n          <EnabedTemplateInfo />\n        </TabPanel>\n      )}\n    </Paper>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/client\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players(id: $id) {\n      id\n      name\n      isEmpty\n      revealedRole\n      isDie\n      vote\n      chiefVote\n      isValidCandidate\n      isVoteFinish\n    }\n    wolfKillList(id: $id) {\n      id\n      isKill\n    }\n    gameInfo(id: $id) {\n      isVoteFinish\n      chiefId\n    }\n    darkInfo(id: $id) {\n      isStart\n      remainTime\n      actRoleType\n      darkDay\n      targetList {\n        id\n        isKill\n      }\n    }\n  }\n`;\n\nconst SUBMIT_VOTE = gql`\n  mutation SubmitVote($target: Int!) {\n    submitVote(target: $target)\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst DARK_ACTION = gql`\n  mutation DarkAction($targetId: Int!, $id: Int!) {\n    exeDarkAction(targetId: $targetId, id: $id)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"center\">玩家</TableCell>\n            <TableCell align=\"center\">警長</TableCell>\n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">狀態</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id === 0 ? `♾️` :row.isDie ? (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🐾\n                  </span>\n                ) : (\n                  row.id\n                )}\n                {row.id === props.chiefId && row.id !== 0 && (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🌟\n                  </span>\n                )}\n              </TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.chiefVote.toString()}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty\n                      ? \"gray\"\n                      : row.isVoteFinish\n                      ? \"lightgreen\"\n                      : \"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst dialogContent = {\n  WITCH_KILL: { text: \"女巫毒人中\", music: new Audio(\"/witch_kill.mp3\") },\n  WITCH_SAVE: { text: \"女巫救人中\", music: new Audio(\"/witch_save.mp3\") },\n  WOLF: { text: \"狼人正在忙碌的殺人 請稍後\", music: new Audio(\"/wolf.mp3\") },\n  PROPHET: { text: \"預言家驗人\", music: new Audio(\"/prophet.mp3\") },\n  HUNTER: { text: \"獵人獵殺\", music: new Audio(\"/hunter.mp3\") },\n  GUARD: { text: \"守衛守人\", music: new Audio(\"/guard.mp3\") },\n};\n\nfunction DarkAction(props) {\n  const [darkActon] = useMutation(DARK_ACTION);\n  const seletingList = props.data.darkInfo.targetList.filter(\n    (v) => v.isKill === true\n  );\n\n  console.log(seletingList);\n  //const [actRoleType, setActRoleType] = React.useState()\n  const { actRoleType } = props.data.darkInfo;\n\n  React.useEffect(() => {\n    console.log(\"rerender\");\n    dialogContent[actRoleType].music.play();\n\n    return () => {\n      dialogContent[actRoleType].music.pause();\n    };\n  }, [actRoleType]);\n\n  return (\n    <DialogContent>\n      <DialogTitle id=\"simple-dialog-title\">\n        \b第 {props.data.darkInfo.darkDay} 夜\n      </DialogTitle>\n\n      <DialogContentText id=\"alert-dialog-description\">\n        {dialogContent[actRoleType].text}\n      </DialogContentText>\n      {props.data.darkInfo.remainTime}\n\n      {props.data.darkInfo.targetList.length !== 0 && (\n        <>\n          {props.data.darkInfo.targetList.map((v, idx) => (\n            <div key={idx}>\n              <Radio\n                checked={v.isKill ? true : false}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  console.log(v.id);\n                  darkActon({ variables: { targetId: v.id, id: props.id } });\n                }}\n              />\n              {`player ${v.id}`}\n            </div>\n          ))}\n          <Radio\n            checked={seletingList.length === 0 ? true : false}\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"B\" }}\n            onChange={() => {\n              darkActon({ variables: { targetId: -1, id: props.id } });\n            }}\n          />\n          {`none`}\n        </>\n      )}\n    </DialogContent>\n  );\n}\n\nfunction VoteAction(props) {\n  const [target, setTarget] = React.useState(-1);\n\n  const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        {props.players\n          .filter((p) => p.isValidCandidate)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={player.id === target}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  setTarget(player.id);\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={-1 === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTarget(-1);\n          }}\n        />\n        {`棄權`}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            submitVote({ variables: { target } });\n          }}\n          color=\"primary\"\n        >\n          確認\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [\n    playerInfo,\n    { loading, error, data, called: playerCalled },\n  ] = useLazyQuery(GET_PLAYER_INFO, { fetchPolicy: \"network-only\" });\n\n  const [open, setOpen] = React.useState(true);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      playerInfo({variables: { id: props.id, pass: props.pass }});\n    }\n\n    const interval = setInterval(() => {\n      if (isMounted) {\n        playerInfo({ variables: { id: props.id, pass: props.pass } });\n      }\n    }, 500);\n\n    return () => {\n      clearInterval(interval);\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n\n    if (error && !loading) {\n      history.push(\"/\");\n    }\n\n    //audioEl.play()\n  }, [value, error, loading]);\n\n  if (!playerCalled || !data) {\n    return <div>Loading</div>;\n  }\n\n  const hasChief = data.gameInfo.chiefId !== -1;\n  const { id, name: playerName, roleName } = data.player;\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"simple-dialog-title\"\n        open={!data.gameInfo.isVoteFinish}\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {hasChief ? `放逐玩家` : `選擇警長`}\n        </DialogTitle>\n        <VoteAction players={data.players} id={id} />\n      </Dialog>\n\n      <Box display=\"flex\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant=\"h1\" component=\"h1\">\n            {roleName}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} chiefId={data.gameInfo.chiefId} />\n    </>\n  );\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"玩家\" />\n        <Tab label=\"模式\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <PlayerControl id={id} pass={pass} name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EnabedTemplateInfo />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/client\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"react-avatar\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      id\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const [isValid, setIsValid] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling } = useQuery(\n    GET_PLAYERS,\n    {\n      //pollInterval: 500,\n      //fetchPolicy: \"network-only\",\n    }\n  );\n\n  const [\n    updatePlayerPass,\n    { loading: passLoading, data: passData },\n  ] = useMutation(UPDATE_PLAYER_PASS, {\n    onCompleted: (data) => {\n      if (data.updatePlayerPass.isValid) {\n        history.push(\"/game\");\n      }\n    },\n  });\n\n  React.useEffect(() => {\n    startPolling(500);\n\n    return () => {\n      stopPolling();\n    };\n  }, []);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport {\n  useLazyQuery,\n  useQuery,\n  useMutation,\n  ApolloProvider,\n  ApolloClient,\n  HttpLink,\n  InMemoryCache,\n} from \"@apollo/client\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"react-avatar\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n//import ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nimport LoginPage from \"./Login\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/graphql\",\n  }),\n});\n\nconst auth = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: \"/auth\",\n  }),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n    login {\n      id\n      isValid\n    }\n  }\n`;\n\nconst LOG_OFF = gql`\n  mutation Logoff {\n    logoff\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n/*\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n\n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus\n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n*/\n\nfunction LogoffButton() {\n  const history = useHistory();\n  const [logoff] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      history.push(\"/\");\n    },\n  });\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      onClick={() => {\n        logoff();\n        //setIsValidPlayerStatus(false);\n      }}\n    >\n      退出\n    </Button>\n  );\n}\n\nfunction Game() {\n  const history = useHistory();\n  const [getPlayer, { loading, error, data }] = useLazyQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n\n  const classes = useStyles();\n\n  let isMounted = true;\n  useEffect(() => {\n    if (isMounted) {\n      getPlayer();\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      error.graphQLErrors.forEach((e) => {\n        const { extensions } = e;\n        if (extensions.code === \"UNAUTHENTICATED\") {\n          history.push(\"/\")\n          //setIsLogoff(true);\n        }\n      });\n    }\n  }, [error]);\n\n  if (loading || !data) {\n    return <div>Loading</div>;\n  }\n\n  //const [playerId, setPlayerId] = React.useState(-1);\n  //const [playerPass, setPlayerPass] = React.useState(\"\");\n\n  //const [isLogoff, setIsLogoff] = React.useState(false);\n  /*\n  const { loading, error, data } = useQuery(GET_PLAYERS, {\n    fetchPolicy: \"network-only\",\n  });\n  */\n\n  /*\n  const [logoff, {loading:logoffLoading, data:logoffdata}] = useMutation(LOG_OFF, {\n    onCompleted: () => {\n      console.log('complete')\n      //setIsLogoff(true);\n    },\n  });\n  */\n\n  /*\n  \n  */\n\n  /*\n  React.useEffect(() => {\n    if (!loading && isLogoff && !logoffLoading) {\n      history.push(\"/\");\n    }\n  }, [loading, isLogoff, logoffLoading]);\n  */\n  /*\n  if (loading) {\n    return <div>Loading</div>;\n  }\n  */\n\n  console.log(data, loading)\n\n  const playerId = data.login.id;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <AppBar position=\"absolute\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              小狼狼\n            </Typography>\n            <LogoffButton />\n          </Toolbar>\n        </AppBar>\n\n        <div style={{ marginTop: 100, width: 600 }}>\n          {playerId === 0 ? (\n            <God id={playerId} pass={\"\"} name={\"\"} />\n          ) : (\n            <Player id={playerId} pass={\"\"} name={\"\"} />\n          )}\n        </div>\n\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <ApolloProvider client={auth}>\n              <LoginPage />\n            </ApolloProvider>\n          </Route>\n\n          <Route exact path=\"/game\">\n            <ApolloProvider client={client}>\n              <Game />\n            </ApolloProvider>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}