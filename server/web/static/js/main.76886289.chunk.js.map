{"version":3,"sources":["logo.svg","Footer.js","PlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","SET_DIE_STATUS","gql","PlayerTable","props","classes","useMutation","setDie","TableContainer","component","Paper","Table","className","aria-label","size","TableHead","TableRow","TableCell","align","TableBody","data","map","row","key","id","Checkbox","onChange","e","variables","checked","isDie","color","inputProps","scope","name","roleName","votedNumber","style","isEmpty","isVoteFinish","transition","fontSize","BaseTable","total","result","forEach","d","number","push","processData","Fragment","players","v","idx","marginLeft","RoleTable","query","pollInterval","useQuery","fetchPolicy","loading","rawData","error","startPolling","stopPolling","React","useEffect","parseData","console","log","GET_ROLES","AddRole","useState","roleId","setRoleId","roleNumber","setRoleNumber","display","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","width","event","newValue","renderInput","params","TextField","label","variant","type","value","target","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","notifyOnNetworkStatusChange","onCompleted","res","idData","template","refetch","updateRolePriority","dragData","DndProvider","backend","Backend","IconButton","onClick","ids","toString","EditRole","Typography","gutterBottom","EditRuleCore","setValue","updateRule","description","multiline","rows","fullWidth","EditRule","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","GET_TEMPLATES","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","onSelect","isEnabled","onEdit","onDelete","disabled","TemplateTable","addTemplate","deleteTemplate","setName","isBusy","setIsBusy","called","setTimeout","enableTemplate","enableResult","maxWidth","templates","setEditName","Admin","editName","Button","GET_ENABLED_TEMPLATE","EnabledTemplate","enabledTemplate","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","VOTE_START","TemplateRoleTable","playerGroup","r","VoteAction","targetList","setTargetList","onClose","voteStart","DialogContent","DialogContentText","player","Radio","includes","length","DialogActions","targets","Game","generateRole","generatePlayer","removeAllPlayer","isOpen","setIsOpen","useDebounce","updatePlayerName","isPlayerMode","Dialog","open","DialogTitle","God","pass","elevation","ApolloClient","uri","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","SUBMIT_VOTE","vote","Audio","setTarget","submitVote","isValidCandidate","PlayerControl","gameInfo","root","CardContent","Player","client","connectToDevTools","GET_PLAYERS","UPDATE_PLAYER_PASS","Copyright","Date","getFullYear","Login","playerId","setPlayerId","playerPass","setPlayerPass","updatePlayerPass","playerStatus","isValidPlayerStatus","setIsValidPlayerStatus","isValid","CssBaseline","AppBar","position","Toolbar","edge","pt","round","src","renderOption","mt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.76886289.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst SET_DIE_STATUS = gql`\n   mutation SetDieStatus($id: Int!) {\n    setDieStatus(id: $id)\n  }\n`\n\nexport default function PlayerTable(props) {\n  const classes = useStyles();\n  const [setDie] = useMutation(SET_DIE_STATUS);\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>死亡</TableCell>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"right\">玩家</TableCell>\n            <TableCell align=\"right\">角色</TableCell>\n            <TableCell align=\"right\">投票</TableCell>\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>\n                {row.id ? <Checkbox\n                  onChange={(e) => {\n                    setDie({variables:{id:row.id}});\n                  }}\n                  checked={row.isDie}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                />: null}\n              </TableCell>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.roleName}</TableCell>\n              <TableCell align=\"right\">{row.votedNumber}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : row.isVoteFinish? \"lightgreen\":\"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n\n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n  const { variables, query, pollInterval } = props;\n\n  \n  const { loading, error, data: rawData, startPolling, stopPolling } = useQuery(query, {\n    fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  React.useEffect(() => {\n    startPolling(pollInterval); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\n\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    fetchPolicy: \"network-only\",\n    notifyOnNetworkStatusChange: true,\n    variables: { name },\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    },\n  });\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  \n\n  if (loading || res.loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data, orgPriorityList, priorityList);\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name } = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    \n    console.log('mount' + name);\n\n    return ()=>{\n      console.log('umount' + name)\n    }\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n      <RoleTable\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n    />\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name } = props;\n    \n  const [value, setValue] = React.useState(0);\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  console.log(name)\n  return (\n   \n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n        \n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n        \n      </TabPanel>\n     \n    </Paper>\n    \n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      //pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n  React.useEffect(() => {\n    startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} />\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   \n    const { name, description ,roles} = data.enabledTemplate;\n\n    console.log(data.enabledTemplate)\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nconst GET_ROLES = gql`\n  {\n    players {\n      id\n      name\n      roleName\n      isEmpty\n      isDie\n      isVoteFinish\n      votedNumber\n    }\n    gameInfo(id: 0) {\n      isVoteFinish\n    }\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      id\n      name\n      roleName\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole {\n    generateTemplateRole\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst DARK_START = gql`\n  mutation DarkStart {\n    darkStart\n  }\n`;\n\nconst VOTE_START = gql`\n  mutation DarkStart($targets: [Int]) {\n    voteStart(targets: $targets)\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction TemplateRoleTable(props) {\n  return (\n    <RoleTable\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n}\n\nfunction VoteAction(props) {\n  const [targetList, setTargetList] = React.useState([]);\n  const [voteStart] = useMutation(VOTE_START, {\n    onCompleted: () => {\n      props.onClose();\n    },\n  });\n  //const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-slide-description\">\n          請選擇放逐的目標, 目標必須多於一人, 投票人數也必須多於一人\n        </DialogContentText>\n        {props.players\n          .filter((p) => !p.isDie && p.id !== 0)\n          .map((player) => (\n            <div key={player.id}>\n              <Radio\n                checked={targetList.includes(player.id)}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  if (\n                    !targetList.includes(player.id) &&\n                    targetList.length + 1 !==\n                      props.players.filter((p) => !p.isDie && p.id !== 0).length\n                  ) {\n                    setTargetList([...targetList, player.id]);\n                  }\n                }}\n              />\n              {` ${player.id} : ${player.name || \"\"}`}\n            </div>\n          ))}\n        <Radio\n          checked={targetList.length === 0}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            setTargetList([]);\n          }}\n        />\n        {`所有人`}\n      </DialogContent>\n      <DialogActions>\n        {(targetList.length === 0 || targetList.length > 1) && (\n          <Button\n            onClick={() => {\n              voteStart({ variables: { targets: targetList } });\n              //submitVote({variables:{id:props.id, target}})\n            }}\n            color=\"primary\"\n          >\n            確認\n          </Button>\n        )}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction Game(props) {\n  const classes = useStyles();\n\n  //const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [voteStart] = useMutation(VOTE_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  if (props.isPlayerMode) {\n    return (\n      <div style={{}}>\n        <Dialog\n          aria-labelledby=\"simple-dialog-title\"\n          open={isOpen}\n          onClose={() => {\n            setIsOpen(false);\n          }}\n        >\n          <DialogTitle id=\"form-dialog-title\">放逐開始</DialogTitle>\n          <VoteAction\n            players={props.players}\n            onClose={() => {\n              setIsOpen(false);\n            }}\n          />\n        </Dialog>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole();\n            }}\n          >\n            產生角色\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            刪除玩家\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              //voteStart();\n              setIsOpen(true);\n            }}\n          >\n            放逐\n          </Button>\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable data={props.players} />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>\n      </Box>\n      <EnabedTemplateInfo />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const [value, setValue] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES, {\n    pollInterval: 500,\n  });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"遊戲\" />\n        <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n        {isPlayerMode && <Tab label=\"模式\" />}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Game\n          isPlayerMode={isPlayerMode}\n          id={id}\n          pass={pass}\n          name={name}\n          players={data.players}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {isPlayerMode ? <TemplateRoleTable /> : <Admin />}\n      </TabPanel>\n      {isPlayerMode && (\n        <TabPanel value={value} index={2}>\n          <EnabedTemplateInfo />\n        </TabPanel>\n      )}\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport ApolloClient from \"apollo-boost\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\n\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players(id: $id) {\n      id\n      name\n      isEmpty\n      revealedRole\n      isDie\n      vote\n      isValidCandidate\n      isVoteFinish\n    }\n    wolfKillList(id: $id) {\n      id\n      isKill\n    }\n    gameInfo(id: $id) {\n      isVoteFinish\n    }\n    darkInfo(id: $id) {\n      isStart\n      remainTime\n      actRoleType\n      darkDay\n      targetList {\n        id\n        isKill\n      }\n    }\n  }\n`;\n\n\nconst SUBMIT_VOTE = gql`\n   mutation SubmitVote($id: Int!, $target: Int!) {\n    submitVote(id: $id, target: $target)\n  }\n`\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst DARK_ACTION = gql`\n  mutation DarkAction($targetId: Int!, $id: Int!) {\n    exeDarkAction(targetId: $targetId, id: $id)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"center\">玩家</TableCell>\n           \n            <TableCell align=\"center\">放逐</TableCell>\n            <TableCell align=\"right\">狀態</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.isDie ? (\n                  <span aria-label=\"paw\" style={{ fontSize: 30 }}>\n                    🐾\n                  </span>\n                ) : (\n                  row.id\n                )}\n              </TableCell>\n              <TableCell align=\"center\">{row.name}</TableCell>\n              <TableCell align=\"right\">{row.vote.toString()}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : row.isVoteFinish? \"lightgreen\":\"orange\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst dialogContent = {\n  WITCH_KILL: { text: \"女巫毒人中\", music: new Audio(\"/witch_kill.mp3\") },\n  WITCH_SAVE: { text: \"女巫救人中\", music: new Audio(\"/witch_save.mp3\") },\n  WOLF: { text: \"狼人正在忙碌的殺人 請稍後\", music: new Audio(\"/wolf.mp3\") },\n  PROPHET: { text: \"預言家驗人\", music: new Audio(\"/prophet.mp3\") },\n  HUNTER: { text: \"獵人獵殺\", music: new Audio(\"/hunter.mp3\") },\n  GUARD: { text: \"守衛守人\", music: new Audio(\"/guard.mp3\") },\n};\n\nfunction DarkAction(props) {\n  const [darkActon] = useMutation(DARK_ACTION);\n  const seletingList = props.data.darkInfo.targetList.filter(\n    (v) => v.isKill === true\n  );\n\n  console.log(seletingList);\n  //const [actRoleType, setActRoleType] = React.useState()\n  const { actRoleType } = props.data.darkInfo;\n\n  React.useEffect(() => {\n    console.log(\"rerender\");\n    dialogContent[actRoleType].music.play();\n\n    return () => {\n      dialogContent[actRoleType].music.pause();\n    };\n  }, [actRoleType]);\n\n  return (\n    <DialogContent>\n      <DialogTitle id=\"simple-dialog-title\">\n        \b第 {props.data.darkInfo.darkDay} 夜\n      </DialogTitle>\n\n      <DialogContentText id=\"alert-dialog-description\">\n        {dialogContent[actRoleType].text}\n      </DialogContentText>\n      {props.data.darkInfo.remainTime}\n\n      {props.data.darkInfo.targetList.length !== 0 && (\n        <>\n          {props.data.darkInfo.targetList.map((v, idx) => (\n            <div key={idx}>\n              <Radio\n                checked={v.isKill ? true : false}\n                name=\"radio-button-demo\"\n                inputProps={{ \"aria-label\": \"B\" }}\n                onClick={() => {\n                  console.log(v.id);\n                  darkActon({ variables: { targetId: v.id, id: props.id } });\n                }}\n              />\n              {`player ${v.id}`}\n            </div>\n          ))}\n          <Radio\n            checked={seletingList.length === 0 ? true : false}\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"B\" }}\n            onChange={() => {\n              darkActon({ variables: { targetId: -1, id: props.id } });\n            }}\n          />\n          {`none`}\n        </>\n      )}\n    </DialogContent>\n  );\n}\n\nfunction VoteAction(props) {\n\n  const [target, setTarget] = React.useState(-1);\n\n  const [submitVote, { called }] = useMutation(SUBMIT_VOTE);\n\n  return (\n    <>\n    <DialogContent>\n      \n      {props.players.filter(p=>p.isValidCandidate).map((player) => (\n         <div key={player.id}>\n        <Radio\n          checked={player.id === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            \n            setTarget(player.id)\n          }}\n        />\n        {` ${player.id} : ${player.name||''}`}\n        </div>\n      ))}\n      <Radio\n          checked={-1 === target}\n          name=\"radio-button-demo\"\n          inputProps={{ \"aria-label\": \"B\" }}\n          onClick={() => {\n            \n            setTarget(-1)\n          }}\n        />\n        {`棄權`}\n    </DialogContent>\n      <DialogActions>\n      <Button onClick={()=>{\n        submitVote({variables:{id:props.id, target}})\n      }} color=\"primary\">\n        確認\n      </Button>\n      \n    </DialogActions>\n    </>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n\n  const { loading, error, data } = useQuery(GET_PLAYER_INFO, {\n    fetchPolicy: \"network-only\",\n    variables: { id: props.id, pass: props.pass },\n    pollInterval: 500,\n  });\n\n  const [open, setOpen] = React.useState(true);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n\n    //audioEl.play()\n  }, [value]);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const { id, name: playerName, roleName } = data.player;\n  return (\n    <>\n      <Dialog aria-labelledby=\"simple-dialog-title\" open={!data.gameInfo.isVoteFinish}>\n      <DialogTitle id=\"form-dialog-title\">放逐玩家</DialogTitle>\n        <VoteAction players={data.players} id={id}/>\n      </Dialog>\n\n      <Box display=\"flex\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant=\"h1\" component=\"h1\">\n            {roleName}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} />\n    </>\n  );\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"玩家\" />\n        <Tab label=\"模式\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <PlayerControl id={id} pass={pass} name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EnabedTemplateInfo />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Avatar from \"react-avatar\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  connectToDevTools: true\n});\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"right\">玩家</TableCell>\n\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : \"lightgreen\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n  \n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus \n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Login />\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}