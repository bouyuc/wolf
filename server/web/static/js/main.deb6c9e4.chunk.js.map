{"version":3,"sources":["logo.svg","Footer.js","PlayerTable.js","RoleTable.js","AddRole.js","drag/ItemTypes.js","drag/Card.js","drag/Container.js","EditTemplateRole.js","Admin.js","EnabledTemplateInfo.js","God.js","Player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","useStyles","margin","table","minWidth","title","flexGrow","menuButton","marginRight","PlayerTable","props","classes","TableContainer","component","Paper","Table","className","aria-label","size","TableHead","TableRow","TableCell","align","TableBody","data","map","row","key","id","scope","name","roleName","style","color","isEmpty","transition","fontSize","gql","BaseTable","total","result","forEach","d","number","push","processData","Fragment","players","v","idx","marginLeft","RoleTable","variables","query","pollInterval","useQuery","fetchPolicy","loading","rawData","error","startPolling","stopPolling","React","useEffect","parseData","console","log","GET_ROLES","AddRole","useState","roleId","setRoleId","roleNumber","setRoleNumber","display","justifyContent","Autocomplete","options","roles","filter","getOptionLabel","option","width","onChange","event","newValue","renderInput","params","TextField","label","variant","type","value","e","target","marginTop","Fab","updateRoleNumber","parseInt","border","marginBottom","cursor","Card","text","index","moveCard","ref","useRef","useDrop","accept","ItemTypes","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","drop","useDrag","collect","isDragging","opacity","drag","Container","cards","setCards","useCallback","dragCard","newCards","update","$splice","onUpdate","card","i","renderCard","GET_TEMPLATE","UPDATE_ROLE_NUMBER","UPDATE_RULE","UPDATE_ROLE_PRIORITY","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","convertToDragData","EditDarkPriority","priorityList","setPrioritylist","orgPriorityList","setOrgPriorityList","notifyOnNetworkStatusChange","onCompleted","res","idData","template","refetch","useMutation","updateRolePriority","dragData","DndProvider","backend","Backend","IconButton","onClick","ids","toString","EditRole","Typography","gutterBottom","EditRuleCore","setValue","updateRule","description","multiline","rows","fullWidth","EditRule","EditTemplate","square","Tabs","indicatorColor","textColor","Tab","GET_TEMPLATES","ADD_TEMPLATE","DELETE_TEMPLATE","ENABLE_TEMPLATE","TemplateControl","Checkbox","checked","onSelect","inputProps","isEnabled","onEdit","onDelete","disabled","TemplateTable","addTemplate","deleteTemplate","setName","isBusy","setIsBusy","called","setTimeout","enableTemplate","enableResult","maxWidth","templates","setEditName","Admin","editName","Button","GET_ENABLED_TEMPLATE","EnabledTemplate","enabledTemplate","UPDATE_PLAYER_NAME","GENERATE_TEMPLATE_ROLE","GENERATE_TEMPLATE_PLAYER","REMOVE_ALL_PLAYER","DARK_START","TemplateRoleTable","playerGroup","r","Game","generateRole","generatePlayer","removeAllPlayer","darkStart","useDebounce","updatePlayerName","isPlayerMode","God","pass","length","elevation","ApolloClient","uri","submit","container","paddingTop","paddingBottom","GET_PLAYER_INFO","DARK_ACTION","WolfAction","darkActon","killingList","wolfKillList","isKill","DialogContent","Radio","targetId","PlayerControl","player","Dialog","open","darkInfo","isStart","root","CardContent","Player","client","connectToDevTools","GET_PLAYERS","UPDATE_PLAYER_PASS","Copyright","Date","getFullYear","Login","playerId","setPlayerId","playerPass","setPlayerPass","updatePlayerPass","playerStatus","isValidPlayerStatus","setIsValidPlayerStatus","isValid","CssBaseline","AppBar","position","Toolbar","edge","pt","round","src","renderOption","mt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.deb6c9e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n    fade,\n    withStyles,\n    makeStyles,\n    createMuiTheme,\n  } from \"@material-ui/core/styles\";\n\n\n\n  const useStyles = makeStyles((theme) => ({\n    margin: {\n      margin: theme.spacing(1),\n    },\n    table: {\n      minWidth: 450,\n    },\n    title: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n  }));\n\n\nexport default function PlayerTable(props) {\n    const classes = useStyles();\n  \n    return (\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n  \n              <TableCell align=\"right\">玩家</TableCell>\n              <TableCell align=\"right\">角色</TableCell>\n              <TableCell align=\"right\">上線</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.roleName}</TableCell>\n                <TableCell align=\"right\">\n                  <span\n                    style={{\n                      color: row.isEmpty?\"gray\" :\"lightgreen\",\n                      transition: \"all .3s ease\",\n                      fontSize: \"24px\",\n                      marginRight: \"10px\",\n                    }}\n                  >\n                    &#x25cf;\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }","import React from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      number\n    }\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\n//if the number = 0 will not show\n//caculate the total number\nfunction processData(data) {\n  let total = 0;\n\n  const result = [];\n\n  data.forEach((d) => {\n    const { number } = d;\n    if (number) {\n      total += number;\n      result.push(d);\n    }\n  });\n  return { total, data: result };\n}\n\nfunction BaseTable(props) {\n  const classes = useStyles();\n\n\n  \n  const { total, data } = processData(props.data);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>角色</TableCell>\n\n            <TableCell align=\"right\">人數</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <React.Fragment key={row.name}>\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.number}</TableCell>\n              </TableRow>\n              {row.players ? (\n                <TableRow align=\"left\">\n                  {row.players.map((v,idx) => (\n                    <div style={{ fontSize: 22, marginLeft:45 }} key={idx}>{`${v.id} : ${v.name}`}</div>\n                  ))}\n                </TableRow>\n              ) : null}\n           </React.Fragment>\n          ))}\n          <TableRow>\n            <TableCell align=\"right\">總人數</TableCell>\n            <TableCell align=\"right\">{total}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction RoleTable(props) {\n  const { variables, query, pollInterval } = props;\n\n  \n  const { loading, error, data: rawData, startPolling, stopPolling } = useQuery(query, {\n    fetchPolicy:\"network-only\",\n    variables,\n    //pollInterval\n  });\n\n\n  React.useEffect(() => {\n    startPolling(pollInterval); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n  const data = props.parseData(rawData);\n\n  console.log(data, variables, query, rawData);\n\n  return <BaseTable data={data} />;\n}\n\nexport { RoleTable, BaseTable };\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\n\nconst GET_ROLES = gql`\n  {\n    roles {\n      id\n      name\n      \n    }\n    \n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function AddRole(props) {\n  const classes = useStyles();\n  const [roleId, setRoleId] = React.useState(-1);\n  const [roleNumber, setRoleNumber] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES);\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data)\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Autocomplete\n        id=\"combo-box-demo\"\n        options={data.roles.filter((d) => d.id > 0)}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 300 }}\n        onChange={handleRoleChange}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"角色\"\n            variant=\"outlined\"\n            margin=\"dense\"\n          />\n        )}\n      />\n\n      <TextField\n        id=\"standard-basic\"\n        label=\"人數\"\n        variant=\"outlined\"\n        className={classes.margin}\n        margin=\"dense\"\n        type=\"number\"\n        value={roleNumber}\n        onChange={(e) => setRoleNumber(e.target.value)}\n      />\n      <div style={{ marginTop: 5 }}>\n        <Fab\n          size=\"medium\"\n          color=\"secondary\"\n          aria-label=\"add\"\n          size=\"small\"\n          onClick={() => {\n            props.updateRoleNumber({\n              id: roleId,\n              number: parseInt(roleNumber),\n            });\n            /*\n            updateRoleNumber({\n              variables: { id: roleId, number: parseInt(roleNumber) },\n            });\n            */\n          }}\n        >\n          <SaveIcon />\n        </Fab>\n      </div>\n    </div>\n  );\n}\n","export default {\n    CARD: 'card',\n  }","import React, { useRef } from 'react'\nimport { useDrag, useDrop } from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem 1rem',\n  marginBottom: '.5rem',\n  backgroundColor: 'white',\n  cursor: 'move',\n}\nconst Card = ({ id, text, index, moveCard }) => {\n  const ref = useRef(null)\n  const [, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return\n      }\n      const dragIndex = item.index\n      const hoverIndex = index\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return\n      }\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current.getBoundingClientRect()\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset()\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return\n      }\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return\n      }\n      // Time to actually perform the action\n      moveCard(dragIndex, hoverIndex)\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex\n    },\n  })\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n  const opacity = isDragging ? 0 : 1\n  drag(drop(ref))\n  return (\n    <div ref={ref} style={{ ...style, opacity }}>\n      {text}\n    </div>\n  )\n}\nexport default Card","import React, { useState, useCallback } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nconst style = {\n  width: 400,\n};\nconst Container = (props) => {\n  {\n    const [cards, setCards] = useState([...props.data]);\n    const moveCard = useCallback(\n      (dragIndex, hoverIndex) => {\n        const dragCard = cards[dragIndex];\n        const newCards = update(cards, {\n          $splice: [\n            [dragIndex, 1],\n            [hoverIndex, 0, dragCard],\n          ],\n        });\n        setCards(newCards);\n\n        props.onUpdate(newCards)\n      },\n      [cards]\n    );\n    const renderCard = (card, index) => {\n      return (\n        <Card\n          key={card.id}\n          index={index}\n          id={card.id}\n          text={card.text}\n          moveCard={moveCard}\n        />\n      );\n    };\n    return (\n      <>\n        <div style={style}>{cards.map((card, i) => renderCard(card, i))}</div>\n      </>\n    );\n  }\n};\nexport default Container;\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport AddRole from \"./AddRole\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DragBox from \"../src/drag/Container\";\nimport { DndProvider } from \"react-dnd\";\nimport Backend from \"react-dnd-html5-backend\";\n\n\n\nconst GET_TEMPLATE = gql`\n  query GetTemplate($name: String!) {\n    template(name: $name) {\n      roles {\n        name\n        number\n        id\n      }\n      description\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateTempl($roleId: Int!, $number: Int!, $name: String!) {\n    updateTemplateRole(name: $name, number: $number, roleId: $roleId)\n  }\n`;\n\nconst UPDATE_RULE = gql`\n  mutation UpdateRule($name: String!, $description: String!) {\n    updateTemplateDescription(name: $name, description: $description)\n  }\n`;\n\nconst UPDATE_ROLE_PRIORITY = gql`\n  mutation UpdateRolePriority($name: String!, $ids: [Int]!) {\n    updateTemplateRolePriority(name: $name, ids: $ids)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nconst convertToDragData = (data) => {\n  const result = [];\n  data.forEach((d) => {\n    const { name, id } = d;\n    result.push({ id, text: name });\n  });\n  return result;\n};\n\nfunction EditDarkPriority(props) {\n  const { name } = props;\n\n  const [priorityList, setPrioritylist] = React.useState([]);\n  const [orgPriorityList, setOrgPriorityList] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    fetchPolicy: \"network-only\",\n    notifyOnNetworkStatusChange: true,\n    variables: { name },\n    onCompleted: (res) => {\n      console.log(\"complete\", res);\n      const idData = convertToDragData(res.template.roles);\n      setPrioritylist(idData.map((v) => v.id));\n      setOrgPriorityList(idData.map((v) => v.id));\n    },\n  });\n  const [updateRolePriority, res] = useMutation(UPDATE_ROLE_PRIORITY, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  \n\n  if (loading || res.loading) {\n    return <div>Loading</div>;\n  }\n\n  console.log(data, orgPriorityList, priorityList);\n  const dragData = convertToDragData(data.template.roles);\n\n  return (\n    <DndProvider backend={Backend}>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          updateRolePriority({ variables: { name, ids: priorityList } });\n        }}\n        color={\n          orgPriorityList.toString() === priorityList.toString()\n            ? \"primary\"\n            : \"secondary\"\n        }\n      >\n        <SaveIcon />\n      </IconButton>\n      <DragBox\n        data={dragData}\n        onUpdate={(data) => {\n          console.log(\"update view\");\n          setPrioritylist(data.map((v) => v.id));\n        }}\n      />\n    </DndProvider>\n  );\n}\n\nfunction EditRole(props) {\n  const { name } = props;\n  const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  React.useEffect(() => {\n    \n    console.log('mount' + name);\n\n    return ()=>{\n      console.log('umount' + name)\n    }\n  }, []);\n\n  return (\n    <div>\n      <Typography variant=\"h2\" gutterBottom>\n        {name}\n      </Typography>\n      <AddRole\n        updateRoleNumber={({ id: roleId, number }) => {\n          console.log(roleId, name);\n          updateRoleNumber({ variables: { roleId, name, number } });\n        }}\n      />\n\n      <RoleTable\n        query={GET_TEMPLATE}\n        variables={{ name }}\n        parseData={(d) => {\n            console.log(d)\n          return d.template.roles;\n        }}\n        pollInterval={500}\n    />\n    </div>\n  );\n}\n\nfunction EditRuleCore(props) {\n  const [value, setValue] = React.useState(props.value);\n  return (\n    <div>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={() => {\n          props.updateRule({\n            variables: { description: value, name: props.name },\n          });\n        }}\n        color={value === props.value ? \"primary\" : \"secondary\"}\n      >\n        <SaveIcon />\n      </IconButton>\n      <TextField\n        id=\"outlined-multiline-static\"\n        multiline\n        rows={4}\n        fullWidth\n        value={value}\n        variant=\"outlined\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  );\n}\n\nfunction EditRule(props) {\n  const { name } = props;\n\n  const { loading, error, data, refetch } = useQuery(GET_TEMPLATE, {\n    variables: { name },\n  });\n\n  const [updateRule, ruleResult] = useMutation(UPDATE_RULE, {\n    onCompleted: () => {\n      refetch();\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  return (\n    <EditRuleCore\n      value={data.template.description}\n      updateRule={updateRule}\n      name={name}\n    />\n  );\n}\n\nexport default function EditTemplate(props) {\n  const { name } = props;\n    \n  const [value, setValue] = React.useState(0);\n  \n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  console.log(name)\n  return (\n   \n    <Paper square>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n      >\n        <Tab label=\"角色\" />\n        <Tab label=\"規則\" />\n        <Tab label=\"黑夜順序\" />\n        \n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <EditRole name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EditRule name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <EditDarkPriority name={name} />\n        \n      </TabPanel>\n     \n    </Paper>\n    \n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport Container from \"@material-ui/core/Container\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddRole from \"./AddRole\";\nimport EditTemplateRole from \"./EditTemplateRole\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nconst GET_TEMPLATES = gql`\n  {\n    templates {\n      isEnabled\n      name\n    }\n  }\n`;\n\nconst ADD_TEMPLATE = gql`\n  mutation addTemplate($name: String!) {\n    addNewTemplate(name: $name)\n  }\n`;\n\nconst DELETE_TEMPLATE = gql`\n  mutation DeleteTemplate($name: String!) {\n    deleteTemplate(name: $name)\n  }\n`;\n\nconst ENABLE_TEMPLATE = gql`\n  mutation EnableTemplate($name: String!) {\n    enableTemplate(name: $name)\n  }\n`;\n\nfunction TemplateControl(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>選擇</TableCell>\n            <TableCell align=\"left\">遊戲模式</TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>編輯</div>\n            </TableCell>\n            <TableCell align=\"right\">\n              <div style={{ marginRight: 10 }}>刪除</div>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell>\n                <Checkbox\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      props.onSelect(row.name);\n                    }\n                  }}\n                  color=\"primary\"\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n                  checked={row.isEnabled}\n                />\n              </TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    console.log(row.name);\n                    props.onEdit(row.name);\n                  }}\n                >\n                  <CreateIcon />\n                </IconButton>\n              </TableCell>\n              <TableCell align=\"right\">\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => {\n                    //props.onEdit(row.name);\n                    props.onDelete(row.name);\n                  }}\n                  disabled={row.isEnabled}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction TemplateTable(props) {\n  const classes = useStyles();\n  \n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [name, setName] = React.useState(\"\");\n  const [isBusy, setIsBusy] = React.useState(false);\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      //pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n\n\n\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n  React.useEffect(() => {\n    startPolling(500); // will be called only once\n    return stopPolling; // just return cleanup function without making new one\n  }, []);\n\n  if (loading ) {\n    return <div>Loading</div>;\n  }\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          id=\"standard-basic\"\n          label=\"模式名稱\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n\n        <div style={{ marginTop: 5 }}>\n          <Fab\n            size=\"medium\"\n            color=\"secondary\"\n            aria-label=\"add\"\n            size=\"small\"\n            onClick={() => {\n              addTemplate({ variables: { name } });\n            }}\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </div>\n      <Container maxWidth=\"sm\">\n        <TemplateControl\n          data={data.templates}\n          onEdit={(name) => {\n            props.setEditName(name);\n          }}\n          onSelect={(name) => {\n            enableTemplate({ variables: { name } });\n            stopPolling();\n          }}\n          onDelete={(name) => {\n            deleteTemplate({ variables: { name } });\n          }}\n        />\n        </Container>\n    </div>\n  );\n}\n\nexport default function Admin() {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [editName, setEditName] = React.useState(\"\");\n  const [addTemplate] = useMutation(ADD_TEMPLATE);\n  const [deleteTemplate] = useMutation(DELETE_TEMPLATE);\n  const [isBusy, setIsBusy] = React.useState(false);\n\n\n  /*\n  const { loading, error, data, stopPolling, startPolling, called } = useQuery(\n    GET_TEMPLATES,\n    {\n      pollInterval: 500,\n      //notifyOnNetworkStatusChange:true\n    }\n  );\n  const [enableTemplate, enableResult] = useMutation(ENABLE_TEMPLATE, {\n    onCompleted: () => {\n      setIsBusy(true);\n      startPolling(500);\n      setTimeout(() => {\n        setIsBusy(false);\n      }, 2000);\n    },\n  });\n\n\n  if (loading || enableResult.loading || isBusy) {\n    return <div>Loading</div>;\n  }\n  */\n\n  if (editName) {\n    return (\n      <div>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              setEditName(\"\");\n            }}\n          >\n            退出\n          </Button>\n        </Box>\n        <EditTemplateRole name={editName} />\n      </div>\n    );\n  }\n\n  return (\n    <TemplateTable setEditName={name=>{setEditName(name)}}/>\n  );\n}\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\n//import RoleTable from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {BaseTable as BaseRoleTable} from \"./RoleTable\";\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n  }\n`;\n\n\n\nexport default function EnabledTemplate(props) {\n    const { loading, error, data } = useQuery(GET_ENABLED_TEMPLATE, {\n      fetchPolicy: \"network-only\",\n    });\n  \n    if (loading) {\n      return <div>Loading</div>;\n    }\n  \n   \n    const { name, description ,roles} = data.enabledTemplate;\n\n    console.log(data.enabledTemplate)\n    return (\n      <div>\n        <Typography variant=\"h2\" gutterBottom>\n          {name}\n        </Typography>\n        <TextField\n          id=\"outlined-multiline-static\"\n          multiline\n          rows={6}\n          fullWidth\n          value={description}\n          variant=\"outlined\"\n          label=\"規則\"\n          disabled\n          \n        />\n       <BaseRoleTable data={roles}/>\n      </div>\n    );\n  }\n\n\n\n","import React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PlayerTable from \"./PlayerTable\";\nimport { RoleTable } from \"./RoleTable\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Admin from \"./Admin\";\nimport Typography from \"@material-ui/core/Typography\";\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\n\nconst GET_ROLES = gql`\n  {\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst GET_ENABLED_TEMPLATE = gql`\n  {\n    enabledTemplate {\n      name\n      description\n      roles {\n        name\n        id\n        number\n      }\n    }\n    players {\n      id\n      name\n      roleName\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst GENERATE_TEMPLATE_ROLE = gql`\n  mutation GenerateTemplateRole {\n    generateTemplateRole\n  }\n`;\n\nconst GENERATE_TEMPLATE_PLAYER = gql`\n  mutation GenerateTemplatePlayer {\n    generateTemplatePlayer\n  }\n`;\n\nconst REMOVE_ALL_PLAYER = gql`\n  mutation RemoveAllPlayer {\n    removeAllPlayer\n  }\n`;\n//enableTemplate(name:\"777\")\n\nconst DARK_START = gql`\n  mutation DarkStart {\n    darkStart\n  }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 250,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction TemplateRoleTable(props) {\n  return (\n    <RoleTable\n      query={GET_ENABLED_TEMPLATE}\n      variables={{}}\n      parseData={(data) => {\n        const playerGroup = {};\n\n        data.players.forEach((p) => {\n          const { roleName, name, id } = p;\n          if (playerGroup[roleName]) {\n            playerGroup[roleName].push({ name: name || \"\", id });\n          } else {\n            playerGroup[roleName] = [{ name: name || \"\", id }];\n          }\n        });\n\n        console.log(playerGroup);\n\n        const result = [];\n\n        data.enabledTemplate.roles.forEach((r) => {\n          console.log(\"r\", r);\n\n          const { name } = r;\n          result.push({ ...r, players: playerGroup[name] });\n        });\n\n        console.log(result);\n\n        return result;\n      }}\n      pollInterval={500}\n    />\n  );\n}\n\nfunction Game(props) {\n  const classes = useStyles();\n\n  //const [updateRoleNumber] = useMutation(UPDATE_ROLE_NUMBER);\n\n  const [generateRole] = useMutation(GENERATE_TEMPLATE_ROLE);\n  const [generatePlayer] = useMutation(GENERATE_TEMPLATE_PLAYER);\n  const [removeAllPlayer] = useMutation(REMOVE_ALL_PLAYER);\n  const [darkStart] = useMutation(DARK_START);\n  //const [roleId, setRoleId] = React.useState(-1);\n  //const [roleNumber, setRoleNumber] = React.useState(0);\n\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name || \"\");\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: 0, name: value },\n      });\n    }\n  }, [value]);\n  /*\n  const handleRoleChange = (event, newValue) => {\n    setRoleId(newValue.id);\n  };\n  */\n\n  if (props.isPlayerMode) {\n    return (\n      <div style={{}}>\n        <Box display=\"flex\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              generateRole();\n            }}\n          >\n            產生角色\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              removeAllPlayer();\n            }}\n          >\n            刪除玩家\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              darkStart();\n            }}\n          >\n            黑夜開始\n          </Button>\n        </Box>\n        <Box display=\"flex\">\n          <TextField\n            id=\"standard-basic\"\n            label=\"姓名\"\n            variant=\"outlined\"\n            margin=\"dense\"\n            value={name}\n            onChange={(e) => {\n              setValue(e.target.value);\n              setName(e.target.value);\n            }}\n          />\n        </Box>\n        <PlayerTable data={props.players} />\n      </div>\n    );\n  }\n\n  return (\n    <div style={{}}>\n      <Box display=\"flex\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            generatePlayer();\n          }}\n        >\n          加入玩家\n        </Button>\n      </Box>\n      <EnabedTemplateInfo />\n    </div>\n  );\n}\n\nexport default function God(props) {\n  const [value, setValue] = React.useState(0);\n  const { loading, error, data } = useQuery(GET_ROLES, {\n    pollInterval: 500,\n  });\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const { id, pass, name } = props;\n\n  const isPlayerMode = data.players.length > 1 ? true : false;\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"遊戲\" />\n        <Tab label={isPlayerMode ? \"黑夜視野\" : \"模式選擇\"} />\n        {isPlayerMode && <Tab label=\"模式\" />}\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Game\n          isPlayerMode={isPlayerMode}\n          id={id}\n          pass={pass}\n          name={name}\n          players={data.players}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {isPlayerMode ? <TemplateRoleTable /> : <Admin />}\n      </TabPanel>\n      {isPlayerMode && (\n        <TabPanel value={value} index={2}>\n          <EnabedTemplateInfo />\n        </TabPanel>\n      )}\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Avatar from \"react-avatar\";\nimport Radio from \"@material-ui/core/Radio\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport ApolloClient from \"apollo-boost\";\n\nimport EnabedTemplateInfo from \"./EnabledTemplateInfo\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      roleName\n      isEmpty\n    }\n  }\n`;\n\nconst GET_PLAYER_INFO = gql`\n  query GetPlayer($id: Int!, $pass: String!) {\n    player(id: $id, pass: $pass) {\n      id\n      name\n      roleName\n    }\n    players {\n      id\n      name\n      isEmpty\n    }\n    wolfKillList(id: $id) {\n      id\n      isKill\n    }\n    darkInfo {\n      isStart\n    }\n  }\n`;\n\nconst UPDATE_ROLE_NUMBER = gql`\n  mutation UpdateRoleNumber($id: Int!, $number: Int!) {\n    updateRoleNumber(id: $id, number: $number)\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_NAME = gql`\n  mutation UpdatePlayerName($id: Int!, $name: String!) {\n    updatePlayerName(id: $id, name: $name)\n  }\n`;\n\nconst DARK_ACTION = gql`\n  mutation DarkAction($targetId: Int!, $id: Int!) {\n    exeDarkAction(targetId: $targetId, id: $id)\n  }\n`;\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"right\">玩家</TableCell>\n\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : \"lightgreen\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction WolfAction(props) {\n  const [darkActon] = useMutation(DARK_ACTION);\n  const killingList = props.data.wolfKillList.filter(v=>v.isKill)\n  return (\n    <DialogContent>\n      {props.data.wolfKillList.map((v) => (\n        <div>\n          <Radio\n            checked={v.isKill}\n            name=\"radio-button-demo\"\n            inputProps={{ \"aria-label\": \"B\" }}\n            onChange={() => {\n              console.log(v.id);\n              darkActon({ variables: { targetId: v.id, id: props.id } });\n            }}\n          />\n          {`player ${v.id}`}\n        </div>\n      ))}\n      <Radio\n        checked={killingList.length === 0}\n        name=\"radio-button-demo\"\n        inputProps={{ \"aria-label\": \"B\" }}\n        onChange={() => {\n          darkActon({ variables: { targetId: -1, id: props.id } });\n        }}\n      />\n      {`none`}\n    </DialogContent>\n  );\n}\n\nfunction PlayerControl(props) {\n  const classes = useStyles();\n\n  const { loading, error, data } = useQuery(GET_PLAYER_INFO, {\n    fetchPolicy: \"network-only\",\n    variables: { id: props.id, pass: props.pass },\n    pollInterval: 500,\n  });\n\n  const [open, setOpen] = React.useState(true);\n  const [value, setValue] = useDebounce(props.name, 500);\n  const [name, setName] = React.useState(props.name);\n  const [updatePlayerName, { called }] = useMutation(UPDATE_PLAYER_NAME);\n\n  React.useEffect(() => {\n    if (value && (value !== props.name || called)) {\n      updatePlayerName({\n        variables: { id: props.id, name: value },\n      });\n    }\n  }, [value]);\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const { id, name: playerName, roleName } = data.player;\n  return (\n    <>\n      <Dialog\n        aria-labelledby=\"simple-dialog-title\"\n        open={data.darkInfo.isStart}\n      >\n        {data.wolfKillList.length > 0 && (\n          <WolfAction data={data} id={props.id} />\n        )}\n      </Dialog>\n\n      <Box display=\"flex\">\n        <TextField\n          id=\"standard-basic\"\n          label=\"姓名\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          value={name}\n          onChange={(e) => {\n            setValue(e.target.value);\n            setName(e.target.value);\n          }}\n        />\n      </Box>\n      <Card className={classes.root}>\n        <CardContent>\n          <Typography variant=\"h1\" component=\"h1\">\n            {roleName}\n          </Typography>\n        </CardContent>\n      </Card>\n\n      <PlayerTable data={data.players} />\n    </>\n  );\n}\n\nexport default function Player(props) {\n  const { id, pass, name } = props;\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper elevation={3}>\n      <Tabs\n        value={value}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={handleChange}\n        aria-label=\"disabled tabs example\"\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"玩家\" />\n        <Tab label=\"模式\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <PlayerControl id={id} pass={pass} name={name} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <EnabedTemplateInfo />\n      </TabPanel>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"react-select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Footer from \"./Footer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Avatar from \"react-avatar\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport { useDebounce, useDebounceCallback } from \"@react-hook/debounce\";\nimport ApolloClient from \"apollo-boost\";\n\nimport God from \"./God\";\nimport Admin from \"./Admin\";\nimport Player from \"./Player\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  connectToDevTools: true\n});\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    //margin: theme.spacing(1),\n  },\n  table: {\n    minWidth: 450,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst GET_PLAYERS = gql`\n  {\n    players {\n      id\n      name\n      isEmpty\n    }\n  }\n`;\n\nconst UPDATE_PLAYER_PASS = gql`\n  mutation UpdatePlayerPass($id: Int!, $pass: String!) {\n    updatePlayerPass(id: $id, pass: $pass) {\n      isValid\n      name\n    }\n  }\n`;\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nfunction PlayerTable(props) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n\n            <TableCell align=\"right\">玩家</TableCell>\n\n            <TableCell align=\"right\">上線</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.data.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.id}\n              </TableCell>\n              <TableCell align=\"right\">{row.name}</TableCell>\n              <TableCell align=\"right\">\n                <span\n                  style={{\n                    color: row.isEmpty ? \"gray\" : \"lightgreen\",\n                    transition: \"all .3s ease\",\n                    fontSize: \"24px\",\n                    marginRight: \"10px\",\n                  }}\n                >\n                  &#x25cf;\n                </span>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction Login() {\n  const classes = useStyles();\n\n  const [playerId, setPlayerId] = React.useState(-1);\n  const [playerPass, setPlayerPass] = React.useState(\"\");\n  const { loading, error, data } = useQuery(GET_PLAYERS);\n  const [updatePlayerPass, playerStatus] = useMutation(UPDATE_PLAYER_PASS);\n  const [isValidPlayerStatus, setIsValidPlayerStatus] = React.useState(false);\n  if (loading || playerStatus.loading) {\n    return <div>Loading</div>;\n  }\n\n  //if (playerStatus.data)\n  \n  if (\n    playerStatus.called &&\n    playerStatus.data.updatePlayerPass.isValid &&\n    isValidPlayerStatus\n  ) {\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <AppBar position=\"absolute\">\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                小狼狼\n              </Typography>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                onClick={() => {\n                  setIsValidPlayerStatus(false);\n                }}\n              >\n                退出\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          {\n            <div style={{ marginTop: 100 }}>\n              {playerId === 0 ? (\n                <God\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              ) : (\n                <Player\n                  id={playerId}\n                  pass={playerPass}\n                  name={playerStatus.data.updatePlayerPass.name}\n                />\n              )}\n            </div>\n          }\n\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div style={{ marginTop: \"20%\" }}>\n        <Avatar round={true} src=\"wolf-login.png\" />\n        <Autocomplete\n          fullWidth\n          id=\"combo-box-demo\"\n          className={classes.margin}\n          options={data.players}\n          getOptionLabel={(option) => `玩家 ${option.id}`}\n          renderOption={(option) => (\n            <React.Fragment>\n              <span\n                style={{\n                  color: option.isEmpty ? \"gray\" : \"lightgreen\",\n                  transition: \"all .3s ease\",\n                  fontSize: \"24px\",\n                  marginRight: \"10px\",\n                }}\n              >\n                &#x25cf;\n              </span>\n              {` 玩家 ${option.id}`}\n            </React.Fragment>\n          )}\n          onChange={(event, newValue) => {\n            setPlayerId(newValue.id);\n          }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"玩家\"\n              variant=\"outlined\"\n              margin=\"dense\"\n            />\n          )}\n        />\n\n        <TextField\n          fullWidth\n          id=\"standard-basic\"\n          label=\"密碼\"\n          variant=\"outlined\"\n          className={classes.margin}\n          margin=\"dense\"\n          onChange={(e) => setPlayerPass(e.target.value)}\n          value={playerPass}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={() => {\n            updatePlayerPass({\n              variables: { id: playerId, pass: playerPass },\n            });\n            setIsValidPlayerStatus(true);\n          }}\n        >\n          登入\n        </Button>\n      </div>\n\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <Login />\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}